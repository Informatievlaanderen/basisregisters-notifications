name: CD Staging
run-name: 'CD Staging: ${{ github.event.inputs.version }}'
concurrency: CD Staging

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  deploy_start_slack:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Deploy started
    environment: stg
    runs-on: ubuntu-latest

    steps:
    - name: Notify deployment started
      uses: slackapi/slack-github-action@v2.0.0
      with:
        method: chat.postMessage
        token: ${{ secrets.VBR_SLACK_BOT_TOKEN }}
        payload: |
          channel: '#team-dinosaur-dev'
          text: 'Deployment of basisregisters-notification to stg has started'

  deploy_services:
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ deploy_start_slack ]
    name: Deploy
    uses: informatievlaanderen/build-pipeline/.github/workflows/deploy-v4.yml@main
    strategy:
      matrix:
        services: [
          'default-notification-api'
        ]
    with:
      environment: stg
      service-name: ${{ matrix.services }}
      version: ${{ github.event.inputs.version }}
      domain: 'basisregisters'
      project: 'basisregisters'
    secrets: inherit

  deploy_finish_slack:
    if: github.repository_owner == 'Informatievlaanderen'
    needs: [ deploy_services ]
    name: Deploy finished
    runs-on: ubuntu-latest

    steps:
    - name: Notify deployment finished
      uses: slackapi/slack-github-action@v2.0.0
      with:
        method: chat.postMessage
        token: ${{ secrets.VBR_SLACK_BOT_TOKEN }}
        payload: |
          channel: '#team-dinosaur-dev'
          text: 'Deployment of basisregisters-integration to stg has finished'
